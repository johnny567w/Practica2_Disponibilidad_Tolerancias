version: '3.9'

services:

  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_DB: banco
      POSTGRES_USER: usuario1
      POSTGRES_PASSWORD: contraseña
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "usuario1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - banco-network

  spring-backend-1:
    image: johnnys567/backend-banco:latest
    container_name: spring-backend-1
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/banco
      - SPRING_DATASOURCE_USERNAME=usuario1
      - SPRING_DATASOURCE_PASSWORD=contraseña
    networks:
      - banco-network

  spring-backend-2:
    image: johnnys567/backend-banco:latest
    container_name: spring-backend-2
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/banco
      - SPRING_DATASOURCE_USERNAME=usuario1
      - SPRING_DATASOURCE_PASSWORD=contraseña
    networks:
      - banco-network

  backend:
    image: nginx:alpine
    container_name: backend-loadbalancer
    depends_on:
      - spring-backend-1
      - spring-backend-2
    ports:
      - "80:80"
    volumes:
      - ./nginx-backend.conf:/etc/nginx/conf.d/default.conf:ro
      - ./front/frontend/dist/frontend/browser:/usr/share/nginx/html:ro
    networks:
      - banco-network

volumes:
  db_data:

networks:
  banco-network:
